{"version":3,"sources":["context/reducer.js","context/Context.js","components/Form.js","components/Button.js","components/TableList.js","components/Tables.js","components/EditModal.js","components/ButtonList.js","App.js","index.js"],"names":["reducer","state","action","paginate","data","dataLength","length","usersPerPage","Math","ceil","pages","i","cnt","slice","type","isLoading","isError","errorMsg","payload","inputValue","userList","pagination","filteredPages","console","log","filteredList","currPage","newItem","filter","list","id","editItem","editUser","name","email","role","updatedUsers","map","item","newSelected","selectedUser","unSelect","user","removeSelected","el","includes","Error","AppContext","React","createContext","initialState","checkAll","Context","children","useReducer","dispatch","fetchUsers","a","fetch","res","ok","json","message","useEffect","Provider","value","handlePage","pageNumber","Object","keys","nextPage","prevPage","Number","removeItem","String","checkBoxAll","document","getElementById","checked","loadSelectedUsers","selectAllUsersPage","page","filterUsers","setInputValue","userEdit","useGlobalContext","useContext","Form","className","onSubmit","e","preventDefault","onChange","input","target","toLocaleLowerCase","startsWith","placeholder","Button","props","text","classes","data-text","onClick","currEl","currentTarget","dataset","currId","querySelector","classList","add","TableList","Tables","checkBox","EditModal","useState","inputNameState","setName","inputEmailState","setEmail","inputRoleState","setRole","handleOnchange","closeModal","remove","closest","userObj","formElements","elements","htmlFor","ButtonList","buttons","btn","App","content","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.41927152.chunk.js","sourcesContent":["const NUM_PER_PAGE = 10;\r\n\r\nconst reducer = (state, action) => {\r\n    const paginate = (data) => {\r\n        const dataLength = data.length;\r\n        const usersPerPage = Math.ceil(dataLength / NUM_PER_PAGE);\r\n        const pages = {};\r\n\r\n        for (let i = 0, cnt = 0; cnt < usersPerPage; cnt++) {\r\n            pages[cnt + 1] = data.slice(i, i + NUM_PER_PAGE);\r\n            i = i + NUM_PER_PAGE;\r\n        }\r\n\r\n        return pages;\r\n    };\r\n\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {...state, isLoading: true };\r\n        case \"ERROR\":\r\n            return {\r\n                ...state,\r\n                isError: true,\r\n                isLoading: false,\r\n                errorMsg: action.payload,\r\n            };\r\n        case \"SHOW_INPUT\":\r\n            return {...state, inputValue: action.payload };\r\n        case \"LOAD_USERS\":\r\n            const pages = paginate(action.payload);\r\n            return {\r\n                ...state,\r\n                userList: action.payload,\r\n                pagination: pages,\r\n            };\r\n        case \"FILTER_USERS\":\r\n            const filteredPages = paginate(action.payload);\r\n            console.log(`filteredPages`, filteredPages);\r\n            return {\r\n                ...state,\r\n                filteredList: action.payload,\r\n                pagination: filteredPages,\r\n                currPage: 1,\r\n            };\r\n\r\n        case \"SET_PAGE\":\r\n            return {...state, currPage: action.payload };\r\n        case \"REMOVE_ITEM\":\r\n            const newItem = state.userList.filter((list) => {\r\n                return list.id !== action.payload;\r\n            });\r\n            return {...state, userList: newItem };\r\n\r\n        case \"EDIT_ITEM\":\r\n            const editItem = state.userList.filter(\r\n                (list) => list.id === action.payload\r\n            )[0];\r\n\r\n            return {...state, editUser: editItem };\r\n        case \"UPDATE_USER\":\r\n            const { id, name, email, role } = action.payload;\r\n            console.log(`object`, action.payload);\r\n            const updatedUsers = state.userList.map((item) => {\r\n                if (item.id === id) {\r\n                    return { id, name, email, role };\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n\r\n            return {...state, userList: updatedUsers };\r\n        case \"LOAD_SELECTED\":\r\n            const newSelected = [...state.selectedUser, action.payload];\r\n\r\n            return {...state, selectedUser: newSelected };\r\n\r\n        case \"UNLOAD_SELECTED\":\r\n            const unSelect = state.selectedUser.filter(\r\n                (user) => user !== action.payload\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                selectedUser: unSelect,\r\n            };\r\n\r\n        case \"REMOVE_SELECTED\":\r\n            const removeSelected = state.userList.filter(\r\n                (el) => !state.selectedUser.includes(el.id)\r\n            );\r\n            console.log(`removeSelected`, removeSelected);\r\n            return {\r\n                ...state,\r\n                userList: removeSelected,\r\n                selectedUser: [],\r\n                inputValue: \"\",\r\n            };\r\n        default:\r\n            throw new Error(\"no matching action type\");\r\n    }\r\n};\r\n\r\nexport default reducer;","import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  userList: [],\r\n  filteredList: [],\r\n  selectedUser: [],\r\n  pagination: {},\r\n  currPage: 1,\r\n  checkAll: false,\r\n  inputValue: \"\",\r\n  isError: false,\r\n  errorMsg: \"\",\r\n  editUser: {},\r\n};\r\n\r\nconst URL =\r\n  \" https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\r\n\r\nfunction Context({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const res = await fetch(URL);\r\n\r\n      if (!res.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const data = await res.json();\r\n\r\n      dispatch({ type: \"LOAD_USERS\", payload: data });\r\n      dispatch({ type: \"LOADING\" });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: \"ERROR\", payload: error.message });\r\n      console.log(`error`, error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"LOAD_USERS\", payload: state.userList });\r\n  }, [state.userList]);\r\n\r\n  const filterUsers = (data) => {\r\n    // console.log(`data`, data);\r\n    dispatch({ type: \"FILTER_USERS\", payload: data });\r\n  };\r\n  const selectAllUsersPage = (page) => {};\r\n\r\n  const loadSelectedUsers = (id, checked) => {\r\n    if (checked) {\r\n      dispatch({ type: \"LOAD_SELECTED\", payload: id });\r\n    } else {\r\n      dispatch({ type: \"UNLOAD_SELECTED\", payload: id });\r\n    }\r\n  };\r\n  const removeSelected = () => {\r\n    dispatch({ type: \"REMOVE_SELECTED\" });\r\n    const checkBoxAll = document.getElementById(\"checkBox-all\");\r\n    if (checkBoxAll.checked) checkBoxAll.checked = false;\r\n  };\r\n\r\n  const handlePage = (item) => {\r\n    let pageNumber = \"\";\r\n    const pages = Object.keys(state.pagination);\r\n\r\n    if (pages.includes(item)) pageNumber = item;\r\n\r\n    switch (item) {\r\n      case \"next\":\r\n        let nextPage = 0;\r\n        console.log(`state.currPage`, pages.length, state.currPage);\r\n        if (state.currPage === pages.length) {\r\n          nextPage = 1;\r\n        } else {\r\n          nextPage = state.currPage + 1;\r\n        }\r\n        dispatch({ type: \"SET_PAGE\", payload: nextPage });\r\n        return;\r\n      case \"prev\":\r\n        let prevPage = 0;\r\n        if (state.currPage === 1) {\r\n          prevPage = pages.length;\r\n        } else {\r\n          prevPage = state.currPage - 1;\r\n        }\r\n        dispatch({ type: \"SET_PAGE\", payload: prevPage });\r\n        return;\r\n      case \"first\":\r\n        console.log(`first`, item);\r\n        dispatch({ type: \"SET_PAGE\", payload: 1 });\r\n        return;\r\n\r\n      case \"last\":\r\n        dispatch({ type: \"SET_PAGE\", payload: pages.length });\r\n        return;\r\n      case pageNumber:\r\n        dispatch({ type: \"SET_PAGE\", payload: Number(item) });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    console.log(`id`, id);\r\n    dispatch({ type: \"REMOVE_ITEM\", payload: String(id) });\r\n  };\r\n\r\n  const editItem = (id) => {\r\n    console.log(`id`, id);\r\n    dispatch({ type: \"EDIT_ITEM\", payload: String(id) });\r\n  };\r\n  const setInputValue = (value) => {\r\n    dispatch({ type: \"SHOW_INPUT\", payload: value });\r\n  };\r\n\r\n  const userEdit = (user) => {\r\n    console.log(`user`, user);\r\n    dispatch({ type: \"UPDATE_USER\", payload: user });\r\n  };\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        ...state,\r\n        handlePage,\r\n        removeItem,\r\n        editItem,\r\n        removeSelected,\r\n        loadSelectedUsers,\r\n        selectAllUsersPage,\r\n        filterUsers,\r\n        setInputValue,\r\n        userEdit,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      {children}{\" \"}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\nexport { Context, AppContext };\r\n","import React from \"react\";\r\nimport \"./Form.css\";\r\nimport { useGlobalContext } from \"../context/Context\";\r\n\r\nfunction Form() {\r\n  const { userList, filterUsers, inputValue, setInputValue } =\r\n    useGlobalContext();\r\n\r\n  const handleOnchange = (e) => {\r\n    const input = e.target.value;\r\n\r\n    const filteredList = userList.filter((list) => {\r\n      const name = list.name.toLocaleLowerCase();\r\n      const email = list.email.toLocaleLowerCase();\r\n      const role = list.role.toLocaleLowerCase();\r\n\r\n      return (\r\n        name.startsWith(input) ||\r\n        email.startsWith(input) ||\r\n        role.startsWith(input)\r\n      );\r\n    });\r\n\r\n    console.log(`filteredList`, filteredList);\r\n    filterUsers(filteredList);\r\n\r\n    setInputValue(input);\r\n  };\r\n  return (\r\n    <form className=\"admin-form\" onSubmit={(e) => e.preventDefault()}>\r\n      <h2> Admin UI </h2>{\" \"}\r\n      <div className=\"form-control\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"admin-input\"\r\n          value={inputValue}\r\n          onChange={handleOnchange}\r\n          placeholder=\"Search by name, email or role\"\r\n        />\r\n      </div>{\" \"}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\nimport \"./Button.css\";\r\n\r\nimport { useGlobalContext } from \"../context/Context\";\r\n\r\nfunction Button(props) {\r\n  const { handlePage, removeItem, removeSelected, editItem } =\r\n    useGlobalContext();\r\n  const { id, children, text } = props;\r\n\r\n  const classes = `btn ${props.className}`;\r\n\r\n  const handleClick = (e) => {\r\n    const currEl = e.currentTarget.dataset.text;\r\n    const currId = e.currentTarget.id;\r\n    //console.log(`currEl`, currEl, currId);\r\n    handlePage(currEl);\r\n\r\n    if ([\"edit\", \"delete\"].includes(currEl)) {\r\n      // If Edit button is clicked open the Form Modal\r\n      if (currEl === \"edit\") {\r\n        console.log(`currEl`, currEl, currId);\r\n        const modal = document.querySelector(\".modal-outer\");\r\n        modal.classList.add(\"open\");\r\n\r\n        editItem(currId);\r\n      } else if (currEl === \"delete\") {\r\n        removeItem(currId);\r\n      }\r\n    }\r\n    if (currEl === \"delete-selected\") {\r\n      console.log(`clicking Delete`);\r\n      removeSelected();\r\n    }\r\n  };\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={classes}\r\n      id={id}\r\n      data-text={text}\r\n      onClick={handleClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport Button from \"./Button\";\r\nimport { useGlobalContext } from \"../context/Context\";\r\n\r\nfunction TableList(props) {\r\n  const { id, name, email, role } = props;\r\n  const { loadSelectedUsers } = useGlobalContext();\r\n\r\n  const handleClick = (e) => {\r\n    loadSelectedUsers(e.currentTarget.value, e.currentTarget.checked);\r\n  };\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          type=\"checkbox\"\r\n          value={id}\r\n          id={`chckBox-${id}`}\r\n          onChange={handleClick}\r\n        />\r\n      </td>\r\n      <td> {name} </td> <td> {email} </td> <td> {role} </td>\r\n      <td>\r\n        <Button className=\"edit-btn icons\" text=\"edit\" id={id}>\r\n          <FaEdit />\r\n        </Button>\r\n\r\n        <Button className=\"icons delete-icon\" text=\"delete\" id={id}>\r\n          <FaTrash />\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TableList;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../context/Context\";\r\nimport TableList from \"./TableList\";\r\nimport \"./Table.css\";\r\n\r\nfunction Tables() {\r\n  const { pagination, currPage, loadSelectedUsers } = useGlobalContext();\r\n\r\n  const handleChange = (e) => {\r\n    const checkAll = e.currentTarget.checked;\r\n\r\n    for (let user of pagination[currPage]) {\r\n      const checkBox = document.getElementById(`chckBox-${user.id}`);\r\n      if (checkAll) {\r\n        checkBox.checked = true;\r\n        loadSelectedUsers(checkBox.value, checkBox.checked);\r\n      } else {\r\n        checkBox.checked = false;\r\n        loadSelectedUsers(checkBox.value, checkBox.checked);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"user-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"checkBox-all\"\r\n                value=\"all\"\r\n                onChange={handleChange}\r\n              />\r\n            </th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {pagination[currPage].map((list) => {\r\n            return (\r\n              <TableList\r\n                key={list.id}\r\n                id={list.id}\r\n                name={list.name}\r\n                email={list.email}\r\n                role={list.role}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./EditModal.css\";\r\nimport { useGlobalContext } from \"../context/Context\";\r\n\r\nconst EditModal = (props) => {\r\n  const { userEdit } = useGlobalContext();\r\n  const { id, name, email, role } = props.item;\r\n\r\n  const [inputNameState, setName] = useState(\"\");\r\n  const [inputEmailState, setEmail] = useState(\"\");\r\n  const [inputRoleState, setRole] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    let userObj = { id: id, name: \"\", email: \"\", role: \"\" };\r\n    e.preventDefault();\r\n    console.log(`e.target`, e.target);\r\n\r\n    const formElements = document.querySelector(\".edit-form\").elements;\r\n\r\n    for (let el of formElements) {\r\n      if (el.name === \"inpName\") userObj[\"name\"] = el.value;\r\n      if (el.name === \"inpEmail\") userObj[\"email\"] = el.value;\r\n      if (el.name === \"inpRole\") userObj[\"role\"] = el.value;\r\n    }\r\n\r\n    // Sending the edited object to store in the main Array\r\n    userEdit(userObj);\r\n\r\n    // Once the Submit button clicks store the value and close the Modal\r\n    closeModal();\r\n  };\r\n  const handleOnchange = (e) => {\r\n    console.log(`e`, e.target.name);\r\n    const input = e.target.value;\r\n\r\n    if (e.target.name === \"inpName\") setName(input);\r\n    if (e.target.name === \"inpEmail\") setEmail(input);\r\n    if (e.target.name === \"inpRole\") setRole(input);\r\n  };\r\n\r\n  const clickOutside = (e) => {\r\n    const outside = !e.target.closest(\".modal-inner\");\r\n    if (outside) closeModal();\r\n  };\r\n\r\n  const closeModal = () => {\r\n    const modal = document.querySelector(\".modal-outer\");\r\n    modal.classList.remove(\"open\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEmail(email);\r\n    setName(name);\r\n    setRole(role);\r\n  }, [email, name, role]);\r\n  return (\r\n    <div className=\"modal-outer\" onClick={clickOutside}>\r\n      <div className=\"modal-inner\">\r\n        <form className=\"edit-form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-control edit-control\">\r\n            <label htmlFor=\"inpName\">Name </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"admin-input\"\r\n              value={inputNameState}\r\n              name=\"inpName\"\r\n              onChange={handleOnchange}\r\n            />\r\n\r\n            <label htmlFor=\"inpEmail\">Email </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"admin-input\"\r\n              value={inputEmailState}\r\n              name=\"inpEmail\"\r\n              onChange={handleOnchange}\r\n            />\r\n\r\n            <label htmlFor=\"inpRole\">Role </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"admin-input\"\r\n              value={inputRoleState}\r\n              name=\"inpRole\"\r\n              onChange={handleOnchange}\r\n            />\r\n\r\n            <button className=\"btn edit-form-btn submit-btn\"> Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport { useGlobalContext } from \"../context/Context\";\r\n\r\nimport { ImFirst, ImLast, ImNext2, ImPrevious2 } from \"react-icons/im\";\r\n\r\nfunction ButtonList() {\r\n  const { pagination } = useGlobalContext();\r\n  const btns = Object.keys(pagination);\r\n\r\n  const buttons = btns.map((btn) => {\r\n    return (\r\n      <Button className=\"page-btn\" key={btn} text={btn}>\r\n        {btn}\r\n      </Button>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"btn-container\">\r\n      <Button className=\"delete-btn\" text=\"delete-selected\" id={\"deleteId\"}>\r\n        Delete Selectedtext\r\n      </Button>\r\n      <div className=\"page-container\">\r\n        <Button className=\"first-btn\" text=\"first\">\r\n          <ImFirst />\r\n        </Button>\r\n        <Button className=\"prev-btn\" text=\"prev\">\r\n          <ImPrevious2 />\r\n        </Button>\r\n        {buttons}\r\n        <Button className=\"next-btn\" text=\"next\">\r\n          <ImNext2 />\r\n        </Button>\r\n        <Button className=\"last-btn\" text=\"last\">\r\n          <ImLast />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonList;\r\n","import Form from \"./components/Form\";\nimport Table from \"./components/Tables\";\nimport EditModal from \"./components/EditModal\";\n\nimport { useGlobalContext } from \"./context/Context\";\nimport ButtonList from \"./components/ButtonList\";\n\nfunction App() {\n  const { isLoading, pagination, isError, errorMsg, editUser } =\n    useGlobalContext();\n  let content = \"\";\n  let pages = 0;\n\n  if (isLoading) {\n    pages = Object.keys(pagination).length;\n\n    // If no error from the API then check if array is empty because of searching invalid users or no\n    // values return then display below msg Else load the table contents.\n    if (pages === 0) {\n      content = <h3 className=\"empty-list\">No Users to list down...</h3>;\n    } else {\n      content = \"\";\n    }\n  }\n\n  // If the API return error, then display ERROR Msg\n  if (isError) {\n    content = <h3 className=\"empty-list\"> {errorMsg} </h3>;\n  }\n  // If the API is loading and no ERROR, then display below Msg\n  if (!isLoading && !isError) {\n    content = <h2 className=\"empty-list\">Page is loading...</h2>;\n  }\n\n  return (\n    <>\n      <div className=\"section-center\">\n        <Form></Form>\n        {content}\n        {!content && <Table />}\n        {!content && <ButtonList />}\n        <EditModal item={editUser} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Context } from \"./context/Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Context>\n      <App />\n    </Context>{\" \"}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}